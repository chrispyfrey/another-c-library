{"expireTime":9007200828330796000,"key":"transformer-remark-markdown-html-ast-79540f9c8cc0910ce9a12eef719c737b-gatsby-remark-prismjsgatsby-remark-autolink-headers-","val":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"things-that-have-been-helpful-to-me"},"children":[{"type":"element","tagName":"a","properties":{"href":"#things-that-have-been-helpful-to-me","aria-label":"things that have been helpful to me permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Things that have been helpful to me","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":38,"offset":37}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":38,"offset":37}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"line-spacing-in-markdown"},"children":[{"type":"element","tagName":"a","properties":{"href":"#line-spacing-in-markdown","aria-label":"line spacing in markdown permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Line spacing in markdown","position":{"start":{"line":3,"column":4,"offset":42},"end":{"line":3,"column":28,"offset":66}}}],"position":{"start":{"line":3,"column":1,"offset":39},"end":{"line":3,"column":28,"offset":66}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just use a br html tag to create a single line break.  ","position":{"start":{"line":4,"column":1,"offset":67},"end":{"line":4,"column":56,"offset":122}}}],"position":{"start":{"line":4,"column":1,"offset":67},"end":{"line":4,"column":56,"offset":122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"escape-characters-in-markdown"},"children":[{"type":"element","tagName":"a","properties":{"href":"#escape-characters-in-markdown","aria-label":"escape characters in markdown permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Escape characters in markdown","position":{"start":{"line":6,"column":4,"offset":127},"end":{"line":6,"column":33,"offset":156}}}],"position":{"start":{"line":6,"column":1,"offset":124},"end":{"line":6,"column":33,"offset":156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":7,"column":1,"offset":157},"end":{"line":7,"column":9,"offset":165}}},{"type":"text","value":"\\","position":{"start":{"line":7,"column":9,"offset":165},"end":{"line":7,"column":11,"offset":167}}},{"type":"text","value":" to escape characters in markdown such as the underscore or asterisk.","position":{"start":{"line":7,"column":11,"offset":167},"end":{"line":7,"column":80,"offset":236}}}],"position":{"start":{"line":7,"column":1,"offset":157},"end":{"line":7,"column":80,"offset":236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"create-multiline-macro-in-c"},"children":[{"type":"element","tagName":"a","properties":{"href":"#create-multiline-macro-in-c","aria-label":"create multiline macro in c permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Create multiline macro in C","position":{"start":{"line":9,"column":4,"offset":241},"end":{"line":9,"column":31,"offset":268}}}],"position":{"start":{"line":9,"column":1,"offset":238},"end":{"line":9,"column":31,"offset":268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On a mac, Command-F to get find and replace to show up on the bottom.  Next, select the ","position":{"start":{"line":10,"column":1,"offset":269},"end":{"line":10,"column":89,"offset":357}}},{"type":"text","value":"["},{"type":"raw","value":"<b>","position":{"start":{"line":10,"column":90,"offset":358},"end":{"line":10,"column":93,"offset":361}}},{"type":"text","value":".","position":{"start":{"line":10,"column":93,"offset":361},"end":{"line":10,"column":95,"offset":363}}},{"type":"text","value":"*","position":{"start":{"line":10,"column":95,"offset":363},"end":{"line":10,"column":97,"offset":365}}},{"type":"raw","value":"</b>","position":{"start":{"line":10,"column":97,"offset":365},"end":{"line":10,"column":101,"offset":369}}},{"type":"text","value":"]"},{"type":"text","value":" button on the right side of the find and replace pane.  Replace dollar (","position":{"start":{"line":10,"column":102,"offset":370},"end":{"line":10,"column":175,"offset":443}}},{"type":"raw","value":"<b>","position":{"start":{"line":10,"column":175,"offset":443},"end":{"line":10,"column":178,"offset":446}}},{"type":"text","value":"$","position":{"start":{"line":10,"column":178,"offset":446},"end":{"line":10,"column":179,"offset":447}}},{"type":"raw","value":"</b>","position":{"start":{"line":10,"column":179,"offset":447},"end":{"line":10,"column":183,"offset":451}}},{"type":"text","value":") with a space followed by a backslash (","position":{"start":{"line":10,"column":183,"offset":451},"end":{"line":10,"column":223,"offset":491}}},{"type":"raw","value":"<b>","position":{"start":{"line":10,"column":223,"offset":491},"end":{"line":10,"column":226,"offset":494}}},{"type":"text","value":" ","position":{"start":{"line":10,"column":226,"offset":494},"end":{"line":10,"column":227,"offset":495}}},{"type":"text","value":"\\","position":{"start":{"line":10,"column":227,"offset":495},"end":{"line":10,"column":229,"offset":497}}},{"type":"raw","value":"</b>","position":{"start":{"line":10,"column":229,"offset":497},"end":{"line":10,"column":233,"offset":501}}},{"type":"text","value":").  If you have atom-beautify installed, you can beautify (I have beautify on save enabled for the C and C++ languages and clang-format as beautifier).  If you have trouble with Atom-beautify, see next tip.","position":{"start":{"line":10,"column":233,"offset":501},"end":{"line":10,"column":439,"offset":707}}}],"position":{"start":{"line":10,"column":1,"offset":269},"end":{"line":10,"column":439,"offset":707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"static-inline-vs-inline"},"children":[{"type":"element","tagName":"a","properties":{"href":"#static-inline-vs-inline","aria-label":"static inline vs inline permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Static inline vs inline","position":{"start":{"line":12,"column":4,"offset":712},"end":{"line":12,"column":27,"offset":735}}}],"position":{"start":{"line":12,"column":1,"offset":709},"end":{"line":12,"column":27,"offset":735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At least on my mac, when I compile code into binaries in debug mode (-g vs -O3), I get a linking error for functions which were declared inline vs static inline.","position":{"start":{"line":13,"column":1,"offset":736},"end":{"line":13,"column":162,"offset":897}}}],"position":{"start":{"line":13,"column":1,"offset":736},"end":{"line":13,"column":162,"offset":897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"regex-find-replace"},"children":[{"type":"element","tagName":"a","properties":{"href":"#regex-find-replace","aria-label":"regex find replace permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Regex find replace","position":{"start":{"line":15,"column":4,"offset":902},"end":{"line":15,"column":22,"offset":920}}}],"position":{"start":{"line":15,"column":1,"offset":899},"end":{"line":15,"column":22,"offset":920}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Find: less\\(([^,]*),([^),]*)\\)\nReplace: less($1,$2, arg)</code></pre></div>","position":{"start":{"line":16,"column":1,"offset":921},"end":{"line":19,"column":4,"offset":985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To find and replace all instances of less(a, b) with less(a, b, arg)","position":{"start":{"line":21,"column":1,"offset":987},"end":{"line":21,"column":69,"offset":1055}}}],"position":{"start":{"line":21,"column":1,"offset":987},"end":{"line":21,"column":69,"offset":1055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"atom-beautify-problems"},"children":[{"type":"element","tagName":"a","properties":{"href":"#atom-beautify-problems","aria-label":"atom beautify problems permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Atom-beautify problems","position":{"start":{"line":23,"column":4,"offset":1060},"end":{"line":23,"column":26,"offset":1082}}}],"position":{"start":{"line":23,"column":1,"offset":1057},"end":{"line":23,"column":26,"offset":1082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I use Atom with atom-beautify when coding.  Recently, I ran across an error where I couldn't get it to work with C/C++ code.  I had to do the following to get it to work.","position":{"start":{"line":24,"column":1,"offset":1083},"end":{"line":24,"column":171,"offset":1253}}}],"position":{"start":{"line":24,"column":1,"offset":1083},"end":{"line":24,"column":171,"offset":1253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Install llvm","position":{"start":{"line":26,"column":1,"offset":1255},"end":{"line":26,"column":13,"offset":1267}}}],"position":{"start":{"line":26,"column":1,"offset":1255},"end":{"line":26,"column":13,"offset":1267}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> llvm</code></pre></div>","position":{"start":{"line":27,"column":1,"offset":1268},"end":{"line":29,"column":4,"offset":1297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add path in Atom (path may be different to llvm)","position":{"start":{"line":31,"column":1,"offset":1299},"end":{"line":31,"column":49,"offset":1347}}},{"type":"raw","value":"<br/>","position":{"start":{"line":31,"column":49,"offset":1347},"end":{"line":31,"column":54,"offset":1352}}},{"type":"text","value":"\nAtom => Preferences => Packages => atom-beautify => Settings => Executables => ClangFormat","position":{"start":{"line":31,"column":54,"offset":1352},"end":{"line":32,"column":91,"offset":1443}}},{"type":"raw","value":"<br/>","position":{"start":{"line":32,"column":91,"offset":1443},"end":{"line":32,"column":96,"offset":1448}}}],"position":{"start":{"line":31,"column":1,"offset":1299},"end":{"line":32,"column":96,"offset":1448}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/usr/local/Cellar/llvm/9.0.0/bin</code></pre></div>","position":{"start":{"line":33,"column":1,"offset":1449},"end":{"line":35,"column":4,"offset":1493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Fix coffee script per ","position":{"start":{"line":37,"column":1,"offset":1495},"end":{"line":37,"column":23,"offset":1517}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/Glavin001/atom-beautify/issues/2290"},"children":[{"type":"text","value":"https://github.com/Glavin001/atom-beautify/issues/2290","position":{"start":{"line":37,"column":23,"offset":1517},"end":{"line":37,"column":77,"offset":1571}}}],"position":{"start":{"line":37,"column":23,"offset":1517},"end":{"line":37,"column":77,"offset":1571}}}],"position":{"start":{"line":37,"column":1,"offset":1495},"end":{"line":37,"column":77,"offset":1571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the file,","position":{"start":{"line":39,"column":1,"offset":1573},"end":{"line":39,"column":13,"offset":1585}}}],"position":{"start":{"line":39,"column":1,"offset":1573},"end":{"line":39,"column":13,"offset":1585}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">~/.atom/packages/atom-beautify/src/beautifiers/clang-format.coffee</code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1586},"end":{"line":42,"column":4,"offset":1660}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At line 84","position":{"start":{"line":44,"column":1,"offset":1662},"end":{"line":44,"column":11,"offset":1672}}}],"position":{"start":{"line":44,"column":1,"offset":1662},"end":{"line":44,"column":11,"offset":1672}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"coffee\"><pre class=\"language-coffee\"><code class=\"language-coffee\"><span class=\"token keyword\">return</span> @<span class=\"token function\">exe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clang-format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  @<span class=\"token function\">dumpToFile</span><span class=\"token punctuation\">(</span>dumpFile<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"--style=file\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>dumpFile<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":45,"column":1,"offset":1673},"end":{"line":52,"column":4,"offset":1814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add the -> in the fs.unlink to look like","position":{"start":{"line":54,"column":1,"offset":1816},"end":{"line":54,"column":41,"offset":1856}}}],"position":{"start":{"line":54,"column":1,"offset":1816},"end":{"line":54,"column":41,"offset":1856}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"coffee\"><pre class=\"language-coffee\"><code class=\"language-coffee\"><span class=\"token keyword\">return</span> @<span class=\"token function\">exe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clang-format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  @<span class=\"token function\">dumpToFile</span><span class=\"token punctuation\">(</span>dumpFile<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"--style=file\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>dumpFile<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":55,"column":1,"offset":1857},"end":{"line":62,"column":4,"offset":2002}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":63,"column":1,"offset":2003}}}}