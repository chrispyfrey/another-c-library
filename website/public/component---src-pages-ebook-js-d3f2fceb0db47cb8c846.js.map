{"version":3,"sources":["webpack:///./src/pages/ebook.js","webpack:///./src/components/sidebar.js"],"names":["Ebook","allPages","data","allMarkdownRemark","styles","main","margin","maxWidth","display","content","color","padding","sidebar","background","width","height","position","top","title","style","className","href","target","rel","to","type","pageQuery","Sidebar","props","fontFamily","borderLeft","activeLink","fontWeight","ul","paddingLeft","listStyle","li","marginBottom","collator","Intl","Collator","undefined","numeric","sensitivity","titles","paths","i","edges","length","node","frontmatter","push","path","sort","compare","map","val","key","activeStyle"],"mappings":"2FAAA,8KAQe,SAASA,EAAT,GAA0B,IACjCC,EADgC,EAARC,KACRC,kBAChBC,EAAS,CACbC,KAAM,CACJC,OAAO,SACPC,SAAS,SACTC,QAAQ,QAEVC,QAAS,CACPC,MAAM,QACNJ,OAAO,IACPK,QAAQ,QAEVC,QAAS,CACPC,WAAW,UACXC,MAAM,OACNC,OAAO,QACPJ,QAAQ,OACRD,MAAM,UACNM,SAAS,SACTC,IAAI,SAIR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,mCACX,yBAAKC,MAAOf,EAAOC,MACjB,yBAAKc,MAAOf,EAAOK,QAASW,UAAU,WACpC,8DACA,4MAE2B,uBAAGC,KAAK,8CAA8CC,OAAO,SAASC,IAAI,uBAA1E,+CAA4I,kBAAC,IAAD,OAFvK,8fAS4E,kBAAC,OAAD,CAAMC,GAAG,YAAT,cAT5E,qBAYF,kBAAC,IAAD,CAASvB,SAAUA,EAAUwB,KAAK,YAQnC,IAAMC,EAAS,c,iFCGPC,IA1Df,SAAiBC,GA6Bf,IA5BA,IAAMxB,EAAS,CACbQ,QAAS,CACPiB,WAAW,4IACXf,MAAM,QACNC,OAAO,QACPJ,QAAQ,OACRD,MAAM,UACNM,SAAS,SACTC,IAAI,OACJa,WAAW,qBAEbC,WAAY,CACVrB,MAAM,UACNsB,WAAW,OAEbC,GAAI,CACFC,YAAY,IACZC,UAAU,QAEZC,GAAI,CACFC,aAAa,MAIXC,EAAW,IAAIC,KAAKC,cAASC,EAAW,CAACC,SAAS,EAAMC,YAAa,SACvEC,EAAS,GACTC,EAAQ,GAEHC,EAAE,EAAGA,EAAElB,EAAM3B,SAAS8C,MAAMC,OAAQF,IACY,KAAnDlB,EAAM3B,SAAS8C,MAAMD,GAAGG,KAAKC,YAAYhC,QAC3C0B,EAAOO,KAAKvB,EAAM3B,SAAS8C,MAAMD,GAAGG,KAAKC,YAAYhC,OACrD2B,EAAMM,KAAKvB,EAAM3B,SAAS8C,MAAMD,GAAGG,KAAKC,YAAYE,OAOxD,OAHAR,EAAOS,KAAKf,EAASgB,SACrBT,EAAMQ,KAAKf,EAASgB,SAGlB,yBAAKnC,MAAOf,EAAOQ,QAASQ,UAAU,WACpC,6BACGwB,EAAOW,KAAI,SAACC,EAAKV,GAChB,OACE,yBAAKW,IAAKX,GACR,kBAAC,OAAD,CACEtB,GAAE,IAAMI,EAAMH,KAAOoB,EAAMC,GAC3BY,YAAatD,EAAO2B,YACjByB","file":"component---src-pages-ebook-js-d3f2fceb0db47cb8c846.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { FaExternalLinkAlt } from \"react-icons/fa\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar\"\n\nexport default function Ebook({ data }) {\n  const allPages = data.allMarkdownRemark\n  const styles = {\n    main: {\n      margin: `0 auto`,\n      maxWidth: `1200px`,\n      display: `flex`\n    },\n    content: {\n      color: `black`,\n      margin: `0`,\n      padding: `20px`\n    },\n    sidebar: {\n      background: `#F7FAFC`,\n      width: `20vw`,\n      height: `100vh`,\n      padding: `15px`,\n      color: `#63B3ED`,\n      position: `sticky`,\n      top: `62px`,\n    }\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"A C Programming Language eBook\" />\n      <div style={styles.main}>\n        <div style={styles.content} className=\"Content\">\n          <h1>A C Programming Language eBook</h1>\n          <p>The book/library started in August 2019, so it's a work in progress.\n          This is not a usage book. We're working on a book that simply explains usage.\n          We follow patterns used by <a href=\"https://nikhilm.github.io/uvbook/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://nikhilm.github.io/uvbook/index.html <FaExternalLinkAlt /></a>.\n          You create velocity by slowing down and making sure that you always\n          have understanding of what you are doing (or at a minimum make sure you have\n            an understanding of what you don't understand). Developers get better when\n            they can explain what they know (and this is independent of language or\n              technology). Becoming a great developer takes practice. This book may\n              take several reads before you fully get it. The examples intentionally\n              build upon each other, but may build too quickly for some. Feel free to <Link to=\"/contact\">contact us</Link> with questions.</p>\n        </div>\n\n        <Sidebar allPages={allPages} type=\"ebook\" />\n\n      </div>\n    </Layout>\n  );\n}\n// filter: { frontmatter: { posttype: { eq: \"ebook\" }}} below sort in allMarkdownRemark\n\nexport const pageQuery = graphql`\n  query EbookQuery {\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n          }\n          headings(depth: h1) {\n            value\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nfunction Sidebar(props) {\n  const styles = {\n    sidebar: {\n      fontFamily: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif`,\n      width: `400px`,\n      height: `100vh`,\n      padding: `15px`,\n      color: `#1E4E8C`,\n      position: `sticky`,\n      top: `62px`,\n      borderLeft: `solid 1px #EDF2F7`\n    },\n    activeLink: {\n      color: `#38A169`,\n      fontWeight: `700`\n    },\n    ul: {\n      paddingLeft: `0`,\n      listStyle: `none`\n    },\n    li: {\n      marginBottom: `0`\n    }\n  }\n\n  const collator = new Intl.Collator(undefined, {numeric: true, sensitivity: 'base'});\n  let titles = [];\n  let paths = [];\n\n  for (let i=0; i<props.allPages.edges.length; i++) {\n    if (props.allPages.edges[i].node.frontmatter.title !== \"\") {\n      titles.push(props.allPages.edges[i].node.frontmatter.title);\n      paths.push(props.allPages.edges[i].node.frontmatter.path);\n    }\n  }\n\n  titles.sort(collator.compare);\n  paths.sort(collator.compare);\n\n  return (\n    <div style={styles.sidebar} className=\"Sidebar\">\n      <div>\n        {titles.map((val, i) => {\n          return (\n            <div key={i}>\n              <Link\n                to={`/${props.type}${paths[i]}`}\n                activeStyle={styles.activeLink}>\n                  {val}\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar\n\n/*\n<Subheadings active={active} i={i} type={props.type} styles={styles} />\n\n<ul style={styles.ul}>\n  {i.headings.map(({ value: x }) => {\n    let id = x.replace(/\\s+/g, '-').toLowerCase();\n\n    return (\n      <li key={id} style={styles.li}>\n        <Link\n        to={`/${props.type}${i.frontmatter.path}#${id}`}\n        activeStyle={styles.activeLink}>\n          {x}\n        </Link>\n      </li>\n    )\n  })}\n</ul>}\n*/\n"],"sourceRoot":""}