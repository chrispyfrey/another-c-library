{"version":3,"sources":["webpack:///./src/components/mdcontent.js","webpack:///./src/templates/md-page.js","webpack:///./src/components/sidebar.js"],"names":["MdContent","props","dangerouslySetInnerHTML","__html","content","MdPages","data","currPage","markdownRemark","currTitle","frontmatter","title","allPages","allMarkdownRemark","currPos","parseInt","edges","sort","a","b","node","prev","path","next","length","Helmet","className","Date","getFullYear","html","to","posttype","current","type","pageQuery","Headings","curr","style","ul","arr","map","val","value","id","replace","toLowerCase","key","li","activeStyle","activeLink","Sidebar","styles","sidebar","fontFamily","height","padding","color","position","top","borderLeft","fontWeight","paddingLeft","listStyle","marginBottom","elmArr","filter","elm","i","headings"],"mappings":"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","file":"component---src-templates-md-page-js-203a2af8ece2db94eba8.js","sourcesContent":["import React from \"react\"\n\nfunction MdContent(props) {\n  return <div dangerouslySetInnerHTML={{ __html: props.content }} />\n}\n\nexport default MdContent\n","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link, graphql } from \"gatsby\";\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from \"react-icons/fa\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport MdContent from \"../components/mdcontent\";\nimport Sidebar from \"../components/sidebar\";\nimport \"../pages/index.css\";\n\nfunction MdPages({ data }) {\n  const currPage = data.markdownRemark;\n  const currTitle = data.markdownRemark.frontmatter.title;\n  const allPages = data.allMarkdownRemark;\n  const currPos = parseInt(currTitle);\n\n  allPages.edges.sort(function(a, b) {\n    let ai = parseInt(a.node.frontmatter.title);\n    let bi = parseInt(b.node.frontmatter.title);\n    return ai - bi;\n  });\n\n  let prev = { node: { frontmatter: { title: \"Home\", path: \"/\" }}};\n  let next = { node: { frontmatter: { title: \"Home\", path: \"/\" }}};\n\n  if (currPos + 2 < allPages.edges.length && currPos > 1) {\n    next = allPages.edges[currPos + 2];\n    prev = allPages.edges[currPos];\n  } else if (currPos <= 1) {\n    next = allPages.edges[currPos + 2];\n  } else if (currPos + 2 >= allPages.edges.length) {\n    prev = allPages.edges[currPos];\n  }\n\n  return (\n    <Layout>\n      <SEO title={currTitle} />\n      <Helmet title={currTitle} />\n      <div className=\"Md-mn\">\n        <div className=\"Md-cntnt Content\">\n          <h1>{currTitle}</h1>\n          <p>Copyright {new Date().getFullYear()} Andy Curtis & Daniel Curtis</p>\n          <MdContent content={currPage.html} />\n          <div className=\"Md-pst-ftr\">\n            <Link to={`/${currPage.frontmatter.posttype}/${prev.node.frontmatter.path}`}>\n              <FaArrowAltCircleLeft className=\"Md-rrw\" /> {prev.node.frontmatter.title}\n            </Link>\n            <Link to={`/${currPage.frontmatter.posttype}/${next.node.frontmatter.path}`}>\n              {next.node.frontmatter.title} <FaArrowAltCircleRight className=\"Md-rrw\" />\n            </Link>\n          </div>\n        </div>\n\n        <Sidebar\n          current={currTitle}\n          allPages={allPages}\n          type={currPage.frontmatter.posttype} />\n\n      </div>\n    </Layout>\n  );\n}\n\nexport default MdPages;\n\nexport const pageQuery = graphql`\n  query MdPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        posttype\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            posttype\n          }\n          headings(depth: h2) {\n            value\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { useState, useEffect } from \"react\"\nimport { Link } from \"gatsby\"\n\nfunction Headings(props) {\n  if (props.title === props.curr) {\n    return (\n      <ul style={props.style.ul}>\n        {props.arr.map(({ value: val }) => {\n          let id = val.replace(/\\s+/g, '-').toLowerCase();\n          return (\n            <li key={id} style={props.style.li}>\n              <Link\n                to={`/${props.type}${props.path}#${id}`}\n                activeStyle={props.style.activeLink}>\n                {val}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  } else {\n    return (\n      <></>\n    );\n  }\n}\n\nfunction Sidebar(props) {\n  const styles = {\n    sidebar: {\n      fontFamily: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen',\n      'Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif`,\n      height: `100vh`,\n      padding: `15px`,\n      color: `#1E4E8C`,\n      position: `sticky`,\n      top: `62px`,\n      borderLeft: `solid 1px #EDF2F7`\n    },\n    activeLink: {\n      color: `#1A202C`,\n      fontWeight: `700`\n    },\n    ul: {\n      paddingLeft: `0`,\n      listStyle: `none`\n    },\n    li: {\n      marginBottom: `0`\n    }\n  }\n\n  props.allPages.edges.sort(function(a, b) {\n    let ai = parseInt(a.node.frontmatter.title);\n    let bi = parseInt(b.node.frontmatter.title);\n    return ai - bi;\n  });\n\n  let elmArr = props.allPages.edges.filter(elm => elm.node.frontmatter.title.length > 0);\n\n  elmArr = elmArr.filter(elm => elm.node.frontmatter.posttype === props.type);\n\n  return (\n    <div style={styles.sidebar} className=\"Sidebar\">\n      <div>\n        {elmArr.map((val, i) => {\n          return (\n              <div key={i}>\n                <Link\n                  to={`/${props.type}${val.node.frontmatter.path}`}\n                  activeStyle={styles.activeLink}>\n                    {val.node.frontmatter.title}\n                </Link>\n                <Headings\n                  arr={val.node.headings}\n                  curr={props.current}\n                  title={val.node.frontmatter.title}\n                  style={styles}\n                  type={props.type}\n                  path={val.node.frontmatter.path} />\n              </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n"],"sourceRoot":""}