{"version":3,"sources":["webpack:///./src/components/mdcontent.js","webpack:///./src/templates/ebook-page.js","webpack:///./src/components/sidebar.js"],"names":["MdContent","props","dangerouslySetInnerHTML","__html","content","EbookPage","data","currentPage","markdownRemark","allPages","allMarkdownRemark","styles","main","margin","maxWidth","display","color","padding","sidebar","background","height","position","top","activeLink","fontWeight","title","frontmatter","Helmet","style","className","html","type","pageQuery","Sidebar","fontFamily","width","borderLeft","ul","paddingLeft","listStyle","li","marginBottom","console","log","edges","filter","i","node","length","map","key","id","to","path","activeStyle"],"mappings":"iJAMeA,MAJf,SAAmBC,GACjB,OAAO,yBAAKC,wBAAyB,CAAEC,OAAQF,EAAMG,Y,SCHvD,0CAwDeC,UA/Cf,YAA8B,IAATC,EAAQ,EAARA,KACbC,EAAcD,EAAKE,eACnBC,EAAWH,EAAKI,kBAEhBC,EAAS,CACbC,KAAM,CACJC,OAAO,SACPC,SAAS,SACTC,QAAQ,QAEVX,QAAS,CACPY,MAAM,QACNH,OAAO,IACPI,QAAQ,QAEVC,QAAS,CACPC,WAAW,UACXC,OAAO,QACPH,QAAQ,OACRD,MAAM,UACNK,SAAS,SACTC,IAAI,QAENC,WAAY,CACVP,MAAM,UACNQ,WAAW,QAIf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOlB,EAAYmB,YAAYD,QACpC,kBAACE,EAAA,OAAD,CAAQF,MAAK,GAAKlB,EAAYmB,YAAYD,QAC1C,yBAAKG,MAAOjB,EAAOC,MAEjB,yBAAKgB,MAAOjB,EAAOP,QAASyB,UAAU,WACpC,4BAAKtB,EAAYmB,YAAYD,OAC7B,kBAAC,EAAD,CAAWrB,QAASG,EAAYuB,QAGlC,kBAAC,IAAD,CAASrB,SAAUA,EAAUsB,KAAK,aAO3B1B,IAEF2B,EAAS,Y,iCC1DtB,4BA6GeC,IAjFf,SAAiBhC,GAEf,IAAMU,EAAS,CACbO,QAAS,CACPgB,WAAW,4IACXC,MAAM,QACNf,OAAO,QACPH,QAAQ,OACRD,MAAM,UACNK,SAAS,SACTC,IAAI,OACJc,WAAW,qBAEbb,WAAY,CACVP,MAAM,UACNQ,WAAW,OAEba,GAAI,CACFC,YAAY,IACZC,UAAU,QAEZC,GAAI,CACFC,aAAa,MAejB,OAFAC,QAAQC,IAAI1C,EAAMQ,UAGhB,yBAAKmB,MAAOjB,EAAOO,QAASW,UAAU,WACpC,6BACG5B,EAAMQ,SAASmC,MACbC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKrB,YAAYD,MAAMuB,OAAS,KAC9CC,KAAI,YAAkB,IAATH,EAAQ,EAAdC,KACN,OACE,yBAAKG,IAAKJ,EAAEK,IACV,kBAAC,OAAD,CACEC,GAAE,IAAMnD,EAAM8B,KAAOe,EAAEpB,YAAY2B,KACnCC,YAAa3C,EAAOY,YAEjBuB,EAAEpB,YAAYD","file":"component---src-templates-ebook-page-js-d4827c470bc3d33e14d9.js","sourcesContent":["import React from \"react\"\n\nfunction MdContent(props) {\n  return <div dangerouslySetInnerHTML={{ __html: props.content }} />\n}\n\nexport default MdContent\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport MdContent from \"../components/mdcontent\"\nimport Sidebar from \"../components/sidebar\"\n\nfunction EbookPage({ data }) {\n  const currentPage = data.markdownRemark\n  const allPages = data.allMarkdownRemark\n\n  const styles = {\n    main: {\n      margin: `0 auto`,\n      maxWidth: `1200px`,\n      display: `flex`\n    },\n    content: {\n      color: `black`,\n      margin: `0`,\n      padding: `20px`\n    },\n    sidebar: {\n      background: `#F7FAFC`,\n      height: `100vh`,\n      padding: `15px`,\n      color: `#63B3ED`,\n      position: `sticky`,\n      top: `62px`,\n    },\n    activeLink: {\n      color: `#38A169`,\n      fontWeight: `700`\n    }\n  }\n\n  return (\n    <Layout>\n      <SEO title={currentPage.frontmatter.title} />\n      <Helmet title={`${currentPage.frontmatter.title}`} />\n      <div style={styles.main}>\n\n        <div style={styles.content} className=\"Content\">\n          <h1>{currentPage.frontmatter.title}</h1>\n          <MdContent content={currentPage.html} />\n        </div>\n\n        <Sidebar allPages={allPages} type=\"ebook\"/>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default EbookPage\n// filter: { frontmatter: { posttype: { eq: \"ebook\" }}} below sort in allMarkdownRemark\nexport const pageQuery = graphql`\n  query EbookPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n          }\n          headings(depth: h1) {\n            value\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\n/* for dynamically rendering h1s\nfunction Subheadings(props) {\n  if (props.active) {\n    return (\n      <ul style={props.styles.ul}>\n        {props.i.headings.map(({ value: x }) => {\n          let id = x.replace(/\\s+/g, '-').toLowerCase();\n\n          return (\n            <li key={id} style={props.styles.li}>\n              <Link\n              to={`/${props.type}${props.i.frontmatter.path}#${id}`}\n              activeStyle={props.styles.activeLink}>\n                {x}\n              </Link>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n  else return null\n}\n*/\n\nfunction Sidebar(props) {\n  //const [active, setActive] = useState(null)\n  const styles = {\n    sidebar: {\n      fontFamily: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif`,\n      width: `400px`,\n      height: `100vh`,\n      padding: `15px`,\n      color: `#1E4E8C`,\n      position: `sticky`,\n      top: `62px`,\n      borderLeft: `solid 1px #EDF2F7`\n    },\n    activeLink: {\n      color: `#38A169`,\n      fontWeight: `700`\n    },\n    ul: {\n      paddingLeft: `0`,\n      listStyle: `none`\n    },\n    li: {\n      marginBottom: `0`\n    }\n  }\n\n  /* for dynamically rendering h1s\n  const isPartiallyActive = ({ isPartiallyCurrent }) => {\n    console.log(\"isPartiallyCurrent\", isPartiallyCurrent)\n    if (isPartiallyCurrent)\n      setActive(true)\n    else\n      setActive(null)\n  }*/\n\n  console.log(props.allPages)\n\n  return (\n    <div style={styles.sidebar} className=\"Sidebar\">\n      <div>\n        {props.allPages.edges\n          .filter(i => i.node.frontmatter.title.length > 0)\n          .map(({ node: i }) => {\n            return (\n              <div key={i.id}>\n                <Link\n                  to={`/${props.type}${i.frontmatter.path}`}\n                  activeStyle={styles.activeLink}\n                  >\n                    {i.frontmatter.title}\n                </Link>\n\n                {/* getProps={isPartiallyActive} console.log(\"active\", active)}\n\n                <Subheadings active={active} i={i} type={props.type} styles={styles} />\n\n                <ul style={styles.ul}>\n                  {i.headings.map(({ value: x }) => {\n                    let id = x.replace(/\\s+/g, '-').toLowerCase();\n\n                    return (\n                      <li key={id} style={styles.li}>\n                        <Link\n                        to={`/${props.type}${i.frontmatter.path}#${id}`}\n                        activeStyle={styles.activeLink}>\n                          {x}\n                        </Link>\n                      </li>\n                    )\n                  })}\n                </ul>*/}\n\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar\n"],"sourceRoot":""}