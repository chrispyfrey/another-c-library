{"componentChunkName":"component---src-templates-md-page-js","path":"/ebook/1-getting-started/","result":{"data":{"site":{"siteMetadata":{"title":"Another C Library"}},"markdownRemark":{"id":"e92ffe3f-7ca9-5998-86d0-02a589e5a259","html":"<h1 id=\"a-quick-word-about-licensing\"><a href=\"#a-quick-word-about-licensing\" aria-label=\"a quick word about licensing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A quick word about licensing</h1>\n<p>Throughout this book, the following notice will appear at the top of most of the files.</p>\n<p>Copyright 2019 Andy Curtis &#x26; Daniel Curtis</p>\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http://www.apache.org/licenses/LICENSE-2.0</code></pre></div>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n<p>My goal is to produce a work that is unencumbered by licenses, and hope that others will find this code or parts of it useful.</p>\n<h1 id=\"getting-started\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h1>\n<p>This first chapter covers setting up the computer for the projects in succeeding chapters. The following instructions execute in macOS Terminal, which holds consistent with Linux. However, Windows Command Line (now Terminal) may require some variation of the given commands.</p>\n<p>Open the terminal (on a mac - <code class=\"language-text\">Command+Space</code> and type terminal)</p>\n<p>Make sure you are in your home directory</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd</code></pre></div>\n<p>Optionally create a directory to place your code.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir code\ncd code</code></pre></div>\n<p>Clone the examples in this book into your newly created code directory</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/contactandyc/another-c-library.git</code></pre></div>\n<p>Create an environment variable named ac (another c library) and create the variable available the next time you open the terminal</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">echo ac=`pwd`/another-c-library &gt;&gt; ~/.bashrc</code></pre></div>\n<p>Either close the terminal and reopen it or do the following to ensure the last changes take effect.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">. ~/.bashrc</code></pre></div>\n<p>Change to the directory where the project exists</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd $ac</code></pre></div>\n<p>To test whether you have <code class=\"language-text\">make</code> and <code class=\"language-text\">gcc</code> installed (both requirements for this project).  Change the directory to the first example and then run <code class=\"language-text\">make</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd $ac/illustrations/1_getting_started/1_test_setup\nmake</code></pre></div>\n<p>Output should be</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Success!  You are now ready to continue with the rest of the examples in the book.</code></pre></div>\n<p>If an error occurs, use your favorite search engine and copy and paste the error and search for it. The answer will likely exist on sites like stackoverflow.com. These Internet resources did not exist when I began writing software. However, today, most errors are common. Just beware that the answers may be wrong, so you may need to look over a few answers. This project depends upon <code class=\"language-text\">gcc</code> and <code class=\"language-text\">make</code>. Post-installation, repeat the commands above (duplicated below) until you get the \"Success!\" message.</p>\n<p>If you have changed directories, then you will need to rerun this.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd $ac/illustrations/1_getting_started/1_test_setup</code></pre></div>\n<p>Run this command, and if you get the message afterward, you will be good to go.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">make</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Success!  You are now ready to continue with the rest of the examples in the book.</code></pre></div>\n<p>Throughout this book, I will often reference how to run a command with a dollar ($) preceding it, which indicates that you are at a command prompt. You should enter the text after the command, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">make</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Success! You are now ready to continue with the rest of the examples in the book.</code></pre></div>\n<p>might be represented as</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ make\nSuccess!  You are now ready to continue with the rest of the examples in the book.</code></pre></div>\n<p>Therefore, you should enter <code class=\"language-text\">make</code> at the command line and hit enter and expect the text \"Success!...\" if you are following along.</p>\n<p>If you change to the directory</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd $ac/illustrations</code></pre></div>\n<p>and run</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ls -l</code></pre></div>\n<p>you should see the following</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">total 0\ndrwxr-xr-x  15 ac  staff  480 Sep 11 10:02 1_getting_started\ndrwxr-xr-x   4 ac  staff  128 Aug 30 21:15 2_timing\ndrwxr-xr-x   9 ac  staff  288 Sep  7 12:22 3_hello_buffer\ndrwxr-xr-x   9 ac  staff  288 Sep  7 12:22 4_linked_lists\ndrwxr-xr-x   9 ac  staff  288 Sep  7 12:22 5_pool\ndrwxr-xr-x   9 ac  staff  288 Sep  7 12:22 6_binary_search_tree\ndrwxr-xr-x   9 ac  staff  288 Sep  7 12:22 7_printing_the_binary_search_tree\ndrwxr-xr-x   9 ac  staff  288 Sep  7 12:22 8_red_black_tree\ndrwxr-xr-x   9 ac  staff  288 Aug 31 23:23 9_binary_search\ndrwxr-xr-x   9 ac  staff  288 Aug 31 23:23 10_quicksort\ndrwxr-xr-x   9 ac  staff  288 Aug 31 23:23 11_block_allocator\ndrwxr-xr-x   9 ac  staff  288 Aug 31 23:23 12_io</code></pre></div>\n<p>For each chapter, there will be a number and name that corresponds to the chapter in this book.  For example, within <i>1<em>getting</em>started</i>, there is a folder named <i>1<em>test</em>setup</i>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ls -l 1_getting_started</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">total 0\ndrwxr-xr-x  10 ac  staff  320 Sep 11 10:04 1_test_setup</code></pre></div>\n<p>The date and user will likely be different.  Each illustration is named based upon the general application and the order within the chapter.  I will often reference that code is in a given directory.  The expectation is that you would know how to change to that directory demonstrated below.</p>\n<p>In the following, you would be expected to replace \"<directory>\" with the given directory</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd $ac/&lt;directory&gt;</code></pre></div>\n<p>For example, if the code was in <i>illustrations/1<em>getting</em>started/1<em>test</em>setup</i>, you would run the following command to change to the given directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd $ac/illustrations/1_getting_started/1_test_setup</code></pre></div>\n<p>I would highly recommend going through tutorials if you are not familiar with the command line. Understanding the terminal is essential for any programmer. I do not plan on utilizing many terminal related commands but will try to detail the used commands.</p>\n<p><a href=\"../../../README.md\">Table of Contents (only if viewing on Github)</a></p>","frontmatter":{"title":"1. Getting Started","posttype":"ebook"}},"allMarkdownRemark":{"edges":[{"node":{"id":"65ef6af8-db2b-5241-aabb-be94ecaa93a6","frontmatter":{"title":"","path":null,"posttype":null},"headings":[{"value":"Line spacing in markdown"},{"value":"Escape characters in markdown"},{"value":"Create multiline macro in C"},{"value":"Static inline vs inline"},{"value":"Regex find replace"},{"value":"Atom-beautify problems"}]}},{"node":{"id":"ea93de22-255a-510a-a3d6-e5ca71719254","frontmatter":{"title":"","path":null,"posttype":null},"headings":[{"value":"An important intuition to quicksort"}]}},{"node":{"id":"e92ffe3f-7ca9-5998-86d0-02a589e5a259","frontmatter":{"title":"1. Getting Started","path":"/1-getting-started","posttype":"ebook"},"headings":[]}},{"node":{"id":"b16eb4e9-d84b-5be6-84f7-61ebe2bcc410","frontmatter":{"title":"10. Binary Search Trees","path":"/10-binary-search-trees","posttype":"ebook"},"headings":[{"value":"The basic structure"},{"value":"First, Last, Next, Previous"},{"value":"Erase"},{"value":"Postorder iteration"},{"value":"Printing a binary tree"},{"value":"Finding Peers"},{"value":"Quick Recap"}]}},{"node":{"id":"baba82da-4489-5fd7-9915-ef011f56a666","frontmatter":{"title":"11. Balancing Binary Search Trees","path":"/11-balancing-binary-search-trees","posttype":"ebook"},"headings":[{"value":"Why balancing is important"},{"value":"Properties of a red-black tree"},{"value":"Coloring"},{"value":"Rotations"}]}},{"node":{"id":"f2d454de-1f32-50a9-91a3-f3ed53776f11","frontmatter":{"title":"12. The Red-Black Tree","path":"/12-red-black-tree","posttype":"ebook"},"headings":[{"value":"The properties of a red-black tree"},{"value":"Testing the red-black tree properties"},{"value":"Insert"},{"value":"Erase"},{"value":"Quick recap of when tree becomes invalid"},{"value":"fixcolorfor_erase"},{"value":"Packing color into the parent node"}]}},{"node":{"id":"0229f92a-6f18-52a2-9a98-c536b17b48fa","frontmatter":{"title":"13. The Map Object","path":"/13-map","posttype":"ebook"},"headings":[]}},{"node":{"id":"d40dca2d-317c-5be1-96bb-1a1ce5aa709b","frontmatter":{"title":"14. The Set and Multimap","path":"/14-set-and-multimap","posttype":"ebook"},"headings":[{"value":"The set"},{"value":"The multimap"}]}},{"node":{"id":"e3ac64e2-30ef-57ae-958c-e0a639ca4db8","frontmatter":{"title":"15 Docs Test","path":"/15-docs-test","posttype":"docs"},"headings":[]}},{"node":{"id":"dda89e39-e139-5921-b61e-3428acc8db29","frontmatter":{"title":"2. Timing Your Code","path":"/2-timing","posttype":"ebook"},"headings":[{"value":"A brief introduction to C"},{"value":"The void type"},{"value":"What happens during compilation"},{"value":"How to time code"},{"value":"Reversing a string"},{"value":"The basic Makefile"},{"value":"More accurately timing code"},{"value":"Doing a better job of timing continued"},{"value":"Compiler optimizations"},{"value":"Splitting up your code into multiple files part 2"},{"value":"Separating the implementation from the interface"},{"value":"Separating the implementation from the interface (part 2)"},{"value":"Defining an object"},{"value":"The timer interface"},{"value":"Making the timer object reusable"},{"value":"Splitting up a project into multiple directories"},{"value":"Splitting up the Makefile"}]}},{"node":{"id":"9801a3af-8f22-5982-94c5-35f6112eb823","frontmatter":{"title":"3. The Buffer Object","path":"/3-buffer","posttype":"ebook"},"headings":[{"value":"How it compares to other languages"},{"value":"A bit of history and setup"},{"value":"The buffer interface"},{"value":"The implementation"}]}},{"node":{"id":"711af732-1367-5fd2-9136-ab310ae70a1c","frontmatter":{"title":"4. Linked Lists","path":"/4-linked-lists","posttype":"ebook"},"headings":[{"value":"A data structure interface"},{"value":"The data structure interface test driver"},{"value":"The singly linked list"},{"value":"The doubly linked list"}]}},{"node":{"id":"3f9e59fa-f5a7-5d87-95d8-40c4b5a27155","frontmatter":{"title":"5. Introducing Threads","path":"/5-threads","posttype":"ebook"},"headings":[{"value":"Introducing threads"},{"value":"Creating threads"},{"value":"Threads and optimizing code"},{"value":"Avoid global variables when you can"},{"value":"Mutexes"},{"value":"Timing considerations"}]}},{"node":{"id":"14b23037-d39b-5c6a-8575-87c49f29e5bf","frontmatter":{"title":"6. Macros","path":"/6-macros","posttype":"ebook"},"headings":[]}},{"node":{"id":"1f7d377b-cb76-56c9-ab8e-65e6f347a63b","frontmatter":{"title":"7. The Global Allocator Object","path":"/7-allocator","posttype":"ebook"},"headings":[]}},{"node":{"id":"836c39a4-58c3-5e44-973e-2eaee112e590","frontmatter":{"title":"8. The Global Allocator Implementation","path":"/8-allocator-implementation","posttype":"ebook"},"headings":[{"value":"Keywords used"},{"value":"Symbols used"}]}},{"node":{"id":"c0fc3845-5a1d-5561-b1ce-e06b57e99af8","frontmatter":{"title":"9. The Pool Object","path":"/9-pool","posttype":"ebook"},"headings":[]}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ebook/1-getting-started/"}}}