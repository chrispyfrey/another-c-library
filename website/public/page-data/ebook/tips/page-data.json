{"componentChunkName":"component---src-templates-ebook-page-js","path":"/ebook/tips/","result":{"data":{"site":{"siteMetadata":{"title":"Another C Library"}},"markdownRemark":{"id":"65ef6af8-db2b-5241-aabb-be94ecaa93a6","html":"<h1 id=\"things-that-have-been-helpful-to-me\"><a href=\"#things-that-have-been-helpful-to-me\" aria-label=\"things that have been helpful to me permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Things that have been helpful to me</h1>\n<h2 id=\"line-spacing-in-markdown\"><a href=\"#line-spacing-in-markdown\" aria-label=\"line spacing in markdown permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line spacing in markdown</h2>\n<p>Just use a br html tag to create a single line break.  </p>\n<h2 id=\"escape-characters-in-markdown\"><a href=\"#escape-characters-in-markdown\" aria-label=\"escape characters in markdown permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Escape characters in markdown</h2>\n<p>Use the \\ to escape characters in markdown such as the underscore or asterisk.</p>\n<h2 id=\"create-multiline-macro-in-c\"><a href=\"#create-multiline-macro-in-c\" aria-label=\"create multiline macro in c permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create multiline macro in C</h2>\n<p>On a mac, Command-F to get find and replace to show up on the bottom.  Next, select the [<b>.*</b>] button on the right side of the find and replace pane.  Replace dollar (<b>$</b>) with a space followed by a backslash (<b> \\</b>).  If you have atom-beautify installed, you can beautify (I have beautify on save enabled for the C and C++ languages and clang-format as beautifier).  If you have trouble with Atom-beautify, see next tip.</p>\n<h2 id=\"static-inline-vs-inline\"><a href=\"#static-inline-vs-inline\" aria-label=\"static inline vs inline permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static inline vs inline</h2>\n<p>At least on my mac, when I compile code into binaries in debug mode (-g vs -O3), I get a linking error for functions which were declared inline vs static inline.</p>\n<h2 id=\"regex-find-replace\"><a href=\"#regex-find-replace\" aria-label=\"regex find replace permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Regex find replace</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Find: less\\(([^,]*),([^),]*)\\)\nReplace: less($1,$2, arg)</code></pre></div>\n<p>To find and replace all instances of less(a, b) with less(a, b, arg)</p>\n<h2 id=\"atom-beautify-problems\"><a href=\"#atom-beautify-problems\" aria-label=\"atom beautify problems permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Atom-beautify problems</h2>\n<p>I use Atom with atom-beautify when coding.  Recently, I ran across an error where I couldn't get it to work with C/C++ code.  I had to do the following to get it to work.</p>\n<p>Install llvm</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install llvm</code></pre></div>\n<p>Add path in Atom (path may be different to llvm)<br/>\nAtom => Preferences => Packages => atom-beautify => Settings => Executables => ClangFormat<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/usr/local/Cellar/llvm/9.0.0/bin</code></pre></div>\n<p>Fix coffee script per <a href=\"https://github.com/Glavin001/atom-beautify/issues/2290\">https://github.com/Glavin001/atom-beautify/issues/2290</a></p>\n<p>In the file,</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">~/.atom/packages/atom-beautify/src/beautifiers/clang-format.coffee</code></pre></div>\n<p>At line 84</p>\n<div class=\"gatsby-highlight\" data-language=\"coffee\"><pre class=\"language-coffee\"><code class=\"language-coffee\"><span class=\"token keyword\">return</span> @<span class=\"token function\">exe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clang-format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  @<span class=\"token function\">dumpToFile</span><span class=\"token punctuation\">(</span>dumpFile<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"--style=file\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>dumpFile<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<p>Add the -> in the fs.unlink to look like</p>\n<div class=\"gatsby-highlight\" data-language=\"coffee\"><pre class=\"language-coffee\"><code class=\"language-coffee\"><span class=\"token keyword\">return</span> @<span class=\"token function\">exe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clang-format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  @<span class=\"token function\">dumpToFile</span><span class=\"token punctuation\">(</span>dumpFile<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"--style=file\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>dumpFile<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"../../../README.md\">Table of Contents</a>  - Copyright 2019 Andy Curtis</p>","frontmatter":{"title":""}},"allMarkdownRemark":{"edges":[{"node":{"id":"65ef6af8-db2b-5241-aabb-be94ecaa93a6","frontmatter":{"title":"","path":null},"headings":[{"value":"Things that have been helpful to me"}]}},{"node":{"id":"ea93de22-255a-510a-a3d6-e5ca71719254","frontmatter":{"title":"","path":null},"headings":[{"value":"Improving Quicksort"},{"value":"The Improvement to Quicksort"}]}},{"node":{"id":"e92ffe3f-7ca9-5998-86d0-02a589e5a259","frontmatter":{"title":"1. Getting Started","path":"/1-getting-started"},"headings":[{"value":"A quick word about licensing"},{"value":"Getting Started"}]}},{"node":{"id":"b16eb4e9-d84b-5be6-84f7-61ebe2bcc410","frontmatter":{"title":"10. Binary Search Trees","path":"/10-binary-search-trees"},"headings":[{"value":"Binary Search Trees"},{"value":"Find"},{"value":"Insert"}]}},{"node":{"id":"baba82da-4489-5fd7-9915-ef011f56a666","frontmatter":{"title":"11. Balancing Binary Search Trees","path":"/11-balancing-binary-search-trees"},"headings":[{"value":"Balancing Binary Search Trees"}]}},{"node":{"id":"f2d454de-1f32-50a9-91a3-f3ed53776f11","frontmatter":{"title":"12. The Red-Black Tree","path":"/12-red-black-tree"},"headings":[{"value":"The Red-Black Tree"}]}},{"node":{"id":"0229f92a-6f18-52a2-9a98-c536b17b48fa","frontmatter":{"title":"13. The Map Object","path":"/13-map"},"headings":[{"value":"The Map Object"}]}},{"node":{"id":"d40dca2d-317c-5be1-96bb-1a1ce5aa709b","frontmatter":{"title":"14. The Set and Multimap","path":"/14-set-and-multimap"},"headings":[{"value":"The set and multimap"}]}},{"node":{"id":"dda89e39-e139-5921-b61e-3428acc8db29","frontmatter":{"title":"2. Timing Your Code","path":"/2-timing"},"headings":[{"value":"Timing Your Code (the first project)"},{"value":"Splitting up code into multiple files"},{"value":"include <stdlib.h> is added at the top of the file since it is needed for malloc.  All of the members are initialized to zero except repeat (which is set to the value passed into timer_init)."}]}},{"node":{"id":"9801a3af-8f22-5982-94c5-35f6112eb823","frontmatter":{"title":"3. The Buffer Object","path":"/3-buffer"},"headings":[{"value":"The Buffer Object"}]}},{"node":{"id":"711af732-1367-5fd2-9136-ab310ae70a1c","frontmatter":{"title":"4. Linked Lists","path":"/4-linked-lists"},"headings":[{"value":"Linked Lists"}]}},{"node":{"id":"3f9e59fa-f5a7-5d87-95d8-40c4b5a27155","frontmatter":{"title":"5. Introducing Threads","path":"/5-threads"},"headings":[]}},{"node":{"id":"14b23037-d39b-5c6a-8575-87c49f29e5bf","frontmatter":{"title":"6. Macros","path":"/6-macros"},"headings":[{"value":"Macros"}]}},{"node":{"id":"1f7d377b-cb76-56c9-ab8e-65e6f347a63b","frontmatter":{"title":"7. The Global Allocator Object","path":"/7-allocator"},"headings":[{"value":"The Global Allocator Object"},{"value":"A Quick Recap"}]}},{"node":{"id":"836c39a4-58c3-5e44-973e-2eaee112e590","frontmatter":{"title":"8. The Global Allocator Implementation","path":"/8-allocator-implementation"},"headings":[{"value":"The Global Allocator Implementation"},{"value":"To Be Continued"}]}},{"node":{"id":"c0fc3845-5a1d-5561-b1ce-e06b57e99af8","frontmatter":{"title":"9. The Pool Object","path":"/9-pool"},"headings":[{"value":"The Pool Object"},{"value":"The Simplest Implementation"},{"value":"A better implementation"},{"value":"TO BE CONTINUED"}]}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ebook/tips/"}}}